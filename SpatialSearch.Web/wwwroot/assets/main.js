/* empty css      */const h="modulepreload",E=function(n){return"/"+n},c={},a=function(u,s,_){let l=Promise.resolve();if(s&&s.length>0){document.getElementsByTagName("link");const e=document.querySelector("meta[property=csp-nonce]"),o=(e==null?void 0:e.nonce)||(e==null?void 0:e.getAttribute("nonce"));l=Promise.all(s.map(t=>{if(t=E(t),t in c)return;c[t]=!0;const i=t.endsWith(".css"),d=i?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${d}`))return;const r=document.createElement("link");if(r.rel=i?"stylesheet":h,i||(r.as="script",r.crossOrigin=""),r.href=t,o&&r.setAttribute("nonce",o),document.head.appendChild(r),i)return new Promise((m,f)=>{r.addEventListener("load",m),r.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${t}`)))})}))}return l.then(()=>u()).catch(e=>{const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=e,window.dispatchEvent(o),!o.defaultPrevented)throw e})};a(()=>import("./global-vars.js"),[]).then(n=>n.default());a(()=>import("./load-modules.js"),[]).then(n=>n.default());
